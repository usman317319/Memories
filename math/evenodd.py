from manim import *


class evenodd(Scene):
    def construct(self):
        Text.set_default(font_size= 33)
        MathTex.set_default(font_size= 33)
        tex = MathTex(r"f(x)=ax^{n}")
        tex1 = Tex("Consider a = 1.").next_to(tex, DOWN)
        tex2 = Tex("Plugging -1 , 0 , 1")




        ############# ODD FUNCTION SECTION ############################
        axesodd1 = Axes().add_coordinates(font_size= 25).scale(0.5).to_edge(UL)
        axesodd2 = Axes().add_coordinates(font_size= 25).scale(0.5).to_edge(DL)
        texodd1 = MathTex("f(x)=x").next_to(axesodd1.get_top(), UP, buff= 0.1)
        texodd2 = MathTex("f(x)=x^{3}").next_to(axesodd2.get_bottom(), DOWN, buff= 0.1)
        texodd3 = MathTex("f(x)=x^{5}")
        texodd4 = Tex("As power increases graphs\n\nget more and more curvy\n\nyet they pass through the key\n\npoints provided a = 1\n\nf(x)=ax", color= YELLOW).to_edge(UL)
        
        Dot.set_default(color= YELLOW)
        dotodd1 = Dot(axesodd1.c2p(-1,-1))
        dotodd2 = Dot(axesodd1.c2p(0,0))
        dotodd3 = Dot(axesodd1.c2p(1,1))
        
        dotodd4 = Dot(axesodd2.c2p(-1,-1))
        dotodd5 = Dot(axesodd2.c2p(0,0))
        dotodd6 = Dot(axesodd2.c2p(1,1))
        dotsodd = VGroup(dotodd1, dotodd2, dotodd3, dotodd4, dotodd5, dotodd6)
        dotsodd1 = VGroup(dotodd1, dotodd2, dotodd3)
        pointsodd = Tex("key points=(-1,-1),(0,0),(1,1)", color= YELLOW).next_to(axesodd1.get_bottom(), DOWN, buff= 0.25)

        axesodd1ori = Axes(color= RED).add_coordinates(font_size= 25).shift(ORIGIN + RIGHT * 0.07 + UP * 0.02)

        texodd5 = MathTex("f(x)=x", color= YELLOW).next_to(axesodd1ori.get_top(), UP, buff= 0.1)
        texodd6 = MathTex("f(x)=x^{3}", color= YELLOW).next_to(axesodd1ori.get_top(), UP, buff= 0.1)
        texodd7 = MathTex("f(x)=x^{5}", color= YELLOW).next_to(axesodd1ori.get_top(), UP, buff= 0.1)
        dotodd7 = Dot(axesodd1ori.c2p(-1,-1))
        dotodd8 = Dot(axesodd1ori.c2p(0,0))
        dotodd9 = Dot(axesodd1ori.c2p(1,1))
        dotsodd2 = VGroup(dotodd7, dotodd8, dotodd9)

        oddfun1 = axesodd1ori.plot(lambda x: x, x_range= [-5,5], color= YELLOW)
        oddfun2 = axesodd1ori.plot(lambda x: x**3, x_range= [-1.5,1.5], color= YELLOW)
        oddfun3 = axesodd1ori.plot(lambda x: x**5, x_range= [-1.4,1.4], color= YELLOW)

        ############  EVEN FUNCTION SECTION ####################
        axeseven1 = Axes().add_coordinates(font_size= 25).scale(0.5).to_edge(UR)
        axeseven2 = Axes().add_coordinates(font_size= 25).scale(0.5).to_edge(DR)
        texeven1 = MathTex("f(x)=x^{2}").next_to(axeseven1.get_top(), UP, buff= 0.1)
        texeven2 = MathTex("f(x)=x^{4}").next_to(axeseven2.get_bottom(), DOWN, buff= 0.1)

        doteven1 = Dot(axeseven1.c2p(-1,1))
        doteven2 = Dot(axeseven1.c2p(0,0))
        doteven3 = Dot(axeseven1.c2p(1,1))
        
        doteven4 = Dot(axeseven2.c2p(-1,1))
        doteven5 = Dot(axeseven2.c2p(0,0))
        doteven6 = Dot(axeseven2.c2p(1,1))
        dotseven = VGroup(doteven1, doteven2, doteven3, doteven4, doteven5, doteven6)

        pointseven = Tex("key points=(-1,1),(0,0),(1,1)", color= YELLOW).next_to(axeseven1.get_bottom(), DOWN, buff= 0.25)

        evenfun1 = axesodd1ori.plot(lambda x: x**2, x_range= [-2,2], color= YELLOW)
        evenfun2 = axesodd1ori.plot(lambda x: x**4, x_range= [-1.5,1.5], color= YELLOW)

        texeven5 = MathTex("f(x)=x^{2}", color= YELLOW).next_to(axesodd1ori.get_top(), UP, buff= 0.1)
        texeven6 = MathTex("f(x)=x^{4}", color= YELLOW).next_to(axesodd1ori.get_top(), UP, buff= 0.1)

        doteven7 = Dot(axesodd1ori.c2p(-1,1))
        doteven8 = Dot(axesodd1ori.c2p(0,0))
        doteven9 = Dot(axesodd1ori.c2p(1,1))

        dotseven1 = VGroup(doteven7, doteven8, doteven9)



        #self.add(axesodd1, axesodd2, texodd1, texodd2, dotsodd, axeseven1, axeseven2, texeven1, texeven2, dotsodd, dotseven, pointsodd, pointseven)

        self.play(Write(tex))
        self.wait(1)
        self.play(Write(tex1))
        self.wait(2)
        self.play(FadeOut(tex1))
        self.play(tex.animate.move_to(UP * 3.5))
        t0 = VGroup(axesodd1, axesodd2, axeseven1, axeseven2)
        self.play(FadeIn(t0), run_time= 2)
        self.wait(2)
        t1 = VGroup(texodd1, texodd2, texeven1, texeven2)
        self.play(Write(t1))
        self.wait(1.3)
        self.play(Write(tex2))
        self.wait(1.5)
        self.play(FadeOut(tex2))
        self.play(Write(pointsodd))
        self.wait(1.3)
        self.play(FadeIn(dotsodd), run_time= 1.3)
        self.wait(2)
        self.play(Write(pointseven))
        self.wait(1.3)
        self.play(FadeIn(dotseven))
        self.wait(3)
        t = VGroup(t0, t1, pointsodd, dotsodd, pointseven, dotseven)
        self.play(FadeOut(t))
        self.wait(1)
        tex0 = Tex("Odd power").shift(UP * 3.5 + RIGHT * 2.5)
        self.play(Transform(tex, tex0))
        self.wait(0.5)
        self.play(Create(axesodd1ori))
        self.wait(0.3)
        self.play(FadeIn(dotsodd2))
        self.wait(1)
        self.play(Write(texodd5))
        self.wait(1)
        self.play(Create(oddfun1), run_time= 1)
        self.wait(2)
        self.play(FadeOut(oddfun1))
        self.wait(1)
        self.play(FadeOut(texodd5))
        self.wait(2)
        self.play(Write(texodd6))
        self.wait(1.5)
        self.play(Create(oddfun2))
        self.wait(2)
        self.play(FadeOut(oddfun2))
        self.wait(2)
        self.play(FadeOut(texodd6))
        self.wait(1.5)
        self.play(Write(texodd4))
        self.wait(3)
        self.play(Write(texodd7))
        self.wait(1)
        self.play(Create(oddfun3))
        self.wait(2)
        self.play(FadeOut(texodd4))
        self.wait(1)
        self.play(FadeOut(oddfun3))
        self.wait(2)
        self.play(FadeOut(texodd7))
        self.wait(1)
        
        self.play(FadeOut(dotsodd2))
        self.wait(1)
        tex00 = Tex("Even Power").shift(UP * 3.5 + RIGHT * 2.5)
        self.play(Transform(tex, tex00))
        self.wait(0.5)
        self.play(FadeIn(dotseven1))
        self.wait(0.5)
        self.play(Write(texeven5))
        self.wait(1)
        self.play(Create(evenfun1))
        self.wait(2.5)
        self.play(FadeOut(evenfun1))
        self.play(FadeOut(texeven5))
        self.wait(1)
        self.play(Write(texeven6))
        self.wait(1)
        self.play(Create(evenfun2))
        self.wait(2.5)
        self.play(FadeOut(evenfun2))
        self.play(FadeOut(texeven6))
        self.wait(2)
        t3 = VGroup(dotseven1, tex, axesodd1ori)
        self.play(FadeOut(t3))
        self.wait(1)



        t0 = VGroup(axesodd1, axesodd2, axeseven1, axeseven2)
        self.play(FadeIn(t0), run_time= 2)
        self.wait(2)
        t1 = VGroup(texodd1, texodd2, texeven1, texeven2)
        self.play(Write(t1))
        self.wait(1.3)
        tex001 = Tex("f(x)=ax").shift(UP * 3.5)
        self.play(Write(tex001))

        oddfun4 = axesodd1.plot(lambda x:x, x_range= [-3,3], color= YELLOW)
        oddfun5 = axesodd2.plot(lambda x:x**3, x_range= [-1.5,1.5], color= YELLOW)

        evenfun3 = axeseven1.plot(lambda x:x**2, x_range= [-1.5,1.5], color= YELLOW)
        evenfun4 = axeseven2.plot(lambda x:x**4, x_range= [-1.5,1.5], color= YELLOW)

        oddfun6 = axesodd1.plot(lambda x:-x, x_range= [-1.5,1.5], color= YELLOW)
        oddfun7 = axesodd2.plot(lambda x:-x**3, x_range= [-1.5,1.5], color= YELLOW)

        evenfun5 = axeseven1.plot(lambda x:-x**2, x_range= [-1.5,1.5], color= YELLOW)
        evenfun6 = axeseven2.plot(lambda x:-x**4, x_range= [-1.5,1.5], color= YELLOW)


        t4 = VGroup(oddfun4, oddfun5, evenfun3, evenfun4)
        t5 = VGroup(oddfun6, oddfun7, evenfun5, evenfun6)
        self.play(FadeIn(t4))
        self.wait(1)
        tex002 = Tex("if a is -a\n\nf(x)=-ax")
        tex003 = Tex("f(x)=-ax").shift(UP * 3.5)
        self.play(FadeIn(tex002))
        self.wait(1.5)
        self.play(FadeOut(tex002))
        self.play(Transform(tex001, tex003))
        self.wait(1)
        self.play(Transform(t4, t5))
        self.wait(3)
        t6 = VGroup(tex001, t4, t0, t1)
        self.play(FadeOut(t6))
        self.wait(1)